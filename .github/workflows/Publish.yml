name: .NET Core Desktop

on:
  pull_request:
    types:
      - closed
    branches: [ "main", "dev" ]
  push:
    branches: [ "dev" ]
  workflow_dispatch:
  
jobs:

  if_merged:
##    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get Version
        run: |
          VER=$(sed -n "s/version=//p" VERSION.ini)
          echo "VER=${VER}" >> $GITHUB_ENV
      - name: Create Tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ env.VER }}',
              sha: context.sha
            })
      - name: Download Artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: dotnet-desktop.yml
          name: BuildFiles
          search_artifacts: true
          if_no_artifact_found: fail
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "ConsoleApp1.pdb,ConsoleApp1.deps.json,ConsoleApp1.dll"
          name: "${{ env.VER }}"
          tag: "v${{ env.VER }}"
##      - name: Create Release
##        id: create_release
##        uses: actions/github-script@v6
##        with:
##          script: |
##            try {
##              github.rest.repos.createRelease({
##                draft: false,
##                generate_release_notes: false,
##                name: "${{ env.VER }}",
##                owner: context.repo.owner,
##                repo: context.repo.repo,
##                tag_name: "v${{ env.VER }}",
##                body: "Example release notes"
##              });
##            } catch (error){
##              core.setFailed(error.message);
##            }
